definitions:
  common.AppError:
    properties:
      key:
        type: string
      log:
        type: string
      message:
        type: string
      status_code:
        type: integer
    type: object
  common.Response:
    properties:
      code:
        type: integer
      data: {}
      filter: {}
      message: {}
      paging: {}
    type: object
  models.AddCategory:
    properties:
      category_name:
        type: string
      description:
        type: string
    type: object
  models.AddSupplier:
    properties:
      address:
        type: string
      city:
        type: string
      country:
        type: string
      email:
        type: string
      phone:
        type: string
      supplier_name:
        type: string
    type: object
  models.Category:
    properties:
      category_id:
        type: integer
      category_name:
        type: string
      description:
        type: string
    type: object
  models.Product:
    properties:
      category_id:
        type: string
      create_at:
        type: string
      description:
        type: string
      discount:
        type: number
      image_url:
        type: string
      plant_type:
        type: integer
      price:
        type: number
      product_id:
        type: string
      product_name:
        type: string
      status:
        $ref: '#/definitions/models.Status'
      supplier_id:
        type: string
      unit:
        type: string
      update_at:
        type: string
    type: object
  models.Status:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    type: integer
    x-enum-varnames:
    - Available
    - OutOfStock
    - Discontinued
    - Pre_Order
    - BackOrdered
    - Reserved
    - OnSale
    - NewArrival
    - Damaged
    - Pending
  models.UpdateSupplier:
    properties:
      address:
        type: string
      city:
        type: string
      country:
        type: string
      email:
        type: string
      phone:
        type: string
      supplier_id:
        type: integer
      supplier_name:
        type: string
    type: object
  models.Warehouses:
    properties:
      Location:
        type: string
      Warehouse_ID:
        type: integer
      Warehouse_Name:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/categories:
    get:
      consumes:
      - application/json
      description: Retrieve all products, with optional filtering and paging
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: '-'
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Retrieve a list of categories
      tags:
      - categories
  /api/category:
    post:
      consumes:
      - application/json
      description: Create a new category with the provided parameters
      parameters:
      - description: Category to create
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.AddCategory'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Create a new category
      tags:
      - categories
  /api/category/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a category by id
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Deleted a category
      tags:
      - categories
    get:
      consumes:
      - application/json
      description: Get a category by id
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Get a category
      tags:
      - categories
    put:
      consumes:
      - application/json
      description: Update an existing category with the provided parameters
      parameters:
      - description: Category to update
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Update an existing category
      tags:
      - categories
  /api/product:
    post:
      consumes:
      - application/json
      description: Create a new product with the provided parameters
      parameters:
      - description: Product to create
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Create a new product
      tags:
      - products
  /api/product/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product by id
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Deleted a product
      tags:
      - products
    get:
      consumes:
      - application/json
      description: Get a product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Get a product
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update an existing product with the provided parameters
      parameters:
      - description: Product to update
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Update an existing product
      tags:
      - products
  /api/products:
    get:
      consumes:
      - application/json
      description: Retrieve all products, with optional filtering and paging
      parameters:
      - in: query
        name: status
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: '-'
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Retrieve a list of products
      tags:
      - products
  /api/supplier:
    post:
      consumes:
      - application/json
      description: Create a new supplier with the provided parameters
      parameters:
      - description: Supplier to create
        in: body
        name: Supplier
        required: true
        schema:
          $ref: '#/definitions/models.AddSupplier'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Create a new Supplier
      tags:
      - suppliers
  /api/supplier/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Supplier by id
      parameters:
      - description: Supplier ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Deleted a Supplier
      tags:
      - suppliers
    get:
      consumes:
      - application/json
      description: Get a Supplier by id
      parameters:
      - description: Supplier ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Get a Supplier
      tags:
      - suppliers
    put:
      consumes:
      - application/json
      description: Update an existing Supplier with the provided parameters
      parameters:
      - description: Supplier to update
        in: body
        name: Supplier
        required: true
        schema:
          $ref: '#/definitions/models.UpdateSupplier'
      - description: Supplier ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Update an existing Supplier
      tags:
      - suppliers
  /api/suppliers:
    get:
      consumes:
      - application/json
      description: Retrieve all products, with optional paging
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: '-'
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Retrieve a list of Suppliers
      tags:
      - suppliers
  /api/warehouse:
    post:
      consumes:
      - application/json
      description: Create a new warehouse with the provided parameters
      parameters:
      - description: Warehouse to create
        in: body
        name: warehouse
        required: true
        schema:
          $ref: '#/definitions/models.Warehouses'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Create a new warehouse
      tags:
      - warehouses
  /api/warehouse/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a warehouse by id
      parameters:
      - description: Warehouse ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Deleted a warehouse
      tags:
      - warehouses
    get:
      consumes:
      - application/json
      description: Get a warehouse by id
      parameters:
      - description: Warehouse ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Get a warehouse
      tags:
      - warehouses
    put:
      consumes:
      - application/json
      description: Update an existing warehouse with the provided parameters
      parameters:
      - description: Warehouse to update
        in: body
        name: warehouse
        required: true
        schema:
          $ref: '#/definitions/models.Warehouses'
      - description: Warehouses ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Update an existing warehouse
      tags:
      - warehouses
  /api/warehouses:
    get:
      consumes:
      - application/json
      description: Retrieve all warehouses, with optional paging
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: '-'
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Retrieve a list of warehouses
      tags:
      - warehouses
swagger: "2.0"
