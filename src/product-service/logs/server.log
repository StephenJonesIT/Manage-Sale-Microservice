{"level":"info","msg":"Connecting to database...","time":"2025-02-24T22:56:02+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-24T22:56:02+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-24T22:56:02+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-24T22:56:02+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-24T22:56:02+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-24T22:56:02+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-24T22:57:26+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-24T22:57:26+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-24T22:57:26+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-24T22:57:26+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-24T22:57:26+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-24T22:57:26+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-24T22:58:16+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-24T22:58:16+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-24T22:58:16+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-24T22:58:16+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-24T22:58:16+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-24T22:58:16+07:00"}
{"level":"info","msg":"GetAllProducts endpoint called","time":"2025-02-24T23:00:02+07:00"}
{"level":"info","msg":"Product list retrieved successfully","time":"2025-02-24T23:00:02+07:00"}
{"level":"info","msg":"GetAllProducts endpoint called","time":"2025-02-24T23:00:09+07:00"}
{"level":"info","msg":"Product list retrieved successfully","time":"2025-02-24T23:00:09+07:00"}
{"level":"info","msg":"GetAllProducts endpoint called","time":"2025-02-24T23:00:17+07:00"}
{"level":"info","msg":"Product list retrieved successfully","time":"2025-02-24T23:00:17+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-24T23:01:54+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-24T23:01:54+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-24T23:01:54+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-24T23:01:54+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-24T23:01:54+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-24T23:01:54+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-24T23:03:34+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-24T23:03:34+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-24T23:03:34+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-24T23:03:34+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-24T23:03:34+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-24T23:03:34+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-24T23:04:45+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-24T23:04:45+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-24T23:04:45+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-24T23:04:45+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-24T23:04:45+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-24T23:04:45+07:00"}
{"level":"info","msg":"GetAllProducts endpoint called","time":"2025-02-24T23:07:36+07:00"}
{"level":"info","msg":"Product list retrieved successfully","time":"2025-02-24T23:07:36+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-26T18:36:00+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-26T18:36:00+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-26T18:36:00+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-26T18:36:00+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-26T18:36:00+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-26T18:36:00+07:00"}
{"level":"info","msg":"GetAllCategories endpoint called","time":"2025-02-26T18:36:24+07:00"}
{"level":"error","msg":"Failed to retrieve categories list: Error 1054 (42S22): Unknown column 'id_category' in 'order clause'","time":"2025-02-26T18:36:24+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-26T18:37:29+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-26T18:37:29+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-26T18:37:29+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-26T18:37:29+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-26T18:37:29+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-26T18:37:29+07:00"}
{"level":"info","msg":"GetAllCategories endpoint called","time":"2025-02-26T18:37:35+07:00"}
{"level":"info","msg":"Categories list retrieved successfully","time":"2025-02-26T18:37:35+07:00"}
{"level":"info","msg":"UpdateProduct endpoint called","time":"2025-02-26T21:17:15+07:00"}
{"level":"warning","msg":"Invalid product parameters: parsing time \"string\" as \"2006-01-02T15:04:05Z07:00\": cannot parse \"string\" as \"2006\"","time":"2025-02-26T21:17:15+07:00"}
{"level":"info","msg":"UpdateProduct endpoint called","time":"2025-02-26T21:17:16+07:00"}
{"level":"warning","msg":"Invalid product parameters: parsing time \"string\" as \"2006-01-02T15:04:05Z07:00\": cannot parse \"string\" as \"2006\"","time":"2025-02-26T21:17:16+07:00"}
{"level":"info","msg":"UpdateProduct endpoint called","time":"2025-02-26T21:18:58+07:00"}
{"level":"info","msg":"UpdateProduct endpoint called","time":"2025-02-26T21:19:29+07:00"}
{"level":"info","msg":"UpdateProduct endpoint called","time":"2025-02-26T21:20:16+07:00"}
{"level":"info","msg":"GetAllProducts endpoint called","time":"2025-02-26T21:21:38+07:00"}
{"level":"info","msg":"Product list retrieved successfully","time":"2025-02-26T21:21:38+07:00"}
{"level":"info","msg":"GetAllProducts endpoint called","time":"2025-02-26T21:22:53+07:00"}
{"level":"info","msg":"Product list retrieved successfully","time":"2025-02-26T21:22:53+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-26T21:33:46+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-26T21:33:46+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-26T21:33:46+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-26T21:33:46+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-26T21:33:46+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-26T21:33:46+07:00"}
{"level":"info","msg":"GetProduct endpoint called","time":"2025-02-26T21:37:26+07:00"}
{"level":"info","msg":"Get a product successfully","time":"2025-02-26T21:37:26+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-26T21:40:27+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-26T21:40:27+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-26T21:40:27+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-26T21:40:27+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-26T21:40:27+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-26T21:40:27+07:00"}
{"level":"info","msg":"GetProduct endpoint called","time":"2025-02-26T21:40:52+07:00"}
{"level":"info","msg":"Get a product successfully","time":"2025-02-26T21:40:52+07:00"}
{"level":"info","msg":"GetProduct endpoint called","time":"2025-02-26T21:41:11+07:00"}
{"level":"warning","msg":"Product not found: record not found","time":"2025-02-26T21:41:11+07:00"}
{"level":"info","msg":"GetAllProducts endpoint called","time":"2025-02-26T21:58:57+07:00"}
{"level":"info","msg":"Product list retrieved successfully","time":"2025-02-26T21:58:57+07:00"}
{"level":"info","msg":"GetAllProducts endpoint called","time":"2025-02-26T21:58:58+07:00"}
{"level":"info","msg":"Product list retrieved successfully","time":"2025-02-26T21:58:58+07:00"}
{"level":"info","msg":"GetAllProducts endpoint called","time":"2025-02-26T21:59:21+07:00"}
{"level":"info","msg":"Product list retrieved successfully","time":"2025-02-26T21:59:21+07:00"}
{"level":"info","msg":"GetAllProducts endpoint called","time":"2025-02-26T21:59:22+07:00"}
{"level":"info","msg":"Product list retrieved successfully","time":"2025-02-26T21:59:22+07:00"}
{"level":"info","msg":"GetAllProducts endpoint called","time":"2025-02-26T21:59:26+07:00"}
{"level":"info","msg":"Product list retrieved successfully","time":"2025-02-26T21:59:26+07:00"}
{"level":"info","msg":"GetAllProducts endpoint called","time":"2025-02-26T21:59:36+07:00"}
{"level":"info","msg":"Product list retrieved successfully","time":"2025-02-26T21:59:36+07:00"}
{"level":"info","msg":"GetAllProducts endpoint called","time":"2025-02-26T21:59:46+07:00"}
{"level":"info","msg":"Product list retrieved successfully","time":"2025-02-26T21:59:46+07:00"}
{"level":"info","msg":"GetAllProducts endpoint called","time":"2025-02-26T21:59:57+07:00"}
{"level":"info","msg":"Product list retrieved successfully","time":"2025-02-26T21:59:57+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-26T23:29:18+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-26T23:29:18+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-26T23:29:18+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-26T23:29:18+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-26T23:29:18+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-26T23:29:18+07:00"}
{"level":"info","msg":"GetAllCategories endpoint called","time":"2025-02-26T23:29:55+07:00"}
{"level":"info","msg":"Categories list retrieved successfully","time":"2025-02-26T23:29:55+07:00"}
{"level":"info","msg":"GetAllCategories endpoint called","time":"2025-02-26T23:29:56+07:00"}
{"level":"info","msg":"Categories list retrieved successfully","time":"2025-02-26T23:29:56+07:00"}
{"level":"info","msg":"GetAllCategories endpoint called","time":"2025-02-26T23:30:14+07:00"}
{"level":"info","msg":"Categories list retrieved successfully","time":"2025-02-26T23:30:14+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-26T23:32:00+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-26T23:32:00+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-26T23:32:00+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-26T23:32:00+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-26T23:32:00+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-26T23:32:00+07:00"}
{"level":"info","msg":"CreateCategory endpoint called","time":"2025-02-26T23:32:09+07:00"}
{"level":"info","msg":"Category created successfully","time":"2025-02-26T23:32:09+07:00"}
{"level":"info","msg":"GetAllCategories endpoint called","time":"2025-02-26T23:32:25+07:00"}
{"level":"info","msg":"Categories list retrieved successfully","time":"2025-02-26T23:32:25+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-27T21:14:05+07:00"}
{"level":"debug","msg":"Failed to connect to database!dial tcp 127.0.0.1:3307: connectex: No connection could be made because the target machine actively refused it.","time":"2025-02-27T21:14:05+07:00"}
{"level":"fatal","msg":"Failed to initialize server: dial tcp 127.0.0.1:3307: connectex: No connection could be made because the target machine actively refused it.","time":"2025-02-27T21:14:05+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-27T21:14:20+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-27T21:14:20+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-27T21:14:20+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-27T21:14:20+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-27T21:14:20+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-27T21:14:20+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-27T21:15:45+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-27T21:15:45+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-27T21:15:45+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-27T21:15:45+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-27T21:15:45+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-27T21:15:45+07:00"}
{"level":"info","msg":"GetAllCategories endpoint called","time":"2025-02-27T21:16:08+07:00"}
{"level":"info","msg":"Categories list retrieved successfully","time":"2025-02-27T21:16:08+07:00"}
{"level":"info","msg":"GetAllCategories endpoint called","time":"2025-02-27T21:18:03+07:00"}
{"level":"info","msg":"Categories list retrieved successfully","time":"2025-02-27T21:18:03+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-27T21:19:11+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-27T21:19:11+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-27T21:19:11+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-27T21:19:11+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-27T21:19:11+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-27T21:19:11+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-27T21:26:39+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-27T21:26:39+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-27T21:26:39+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-27T21:26:39+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-27T21:26:39+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-27T21:26:39+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-27T21:28:45+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-27T21:28:45+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-27T21:28:45+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-27T21:28:45+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-27T21:28:45+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-27T21:28:45+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-27T21:29:40+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-27T21:29:40+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-27T21:29:40+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-27T21:29:40+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-27T21:29:40+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-27T21:29:40+07:00"}
{"level":"info","msg":"GetAllCategories endpoint called","time":"2025-02-27T21:30:00+07:00"}
{"level":"info","msg":"Categories list retrieved successfully","time":"2025-02-27T21:30:00+07:00"}
{"level":"info","msg":"CreateCategory endpoint called","time":"2025-02-27T21:33:38+07:00"}
{"level":"info","msg":"Category created successfully","time":"2025-02-27T21:33:38+07:00"}
{"level":"info","msg":"GetAllCategories endpoint called","time":"2025-02-27T21:33:46+07:00"}
{"level":"info","msg":"Categories list retrieved successfully","time":"2025-02-27T21:33:46+07:00"}
{"level":"info","msg":"GetAllCategories endpoint called","time":"2025-02-27T21:34:05+07:00"}
{"level":"info","msg":"Categories list retrieved successfully","time":"2025-02-27T21:34:05+07:00"}
{"level":"info","msg":"GetAllCategories endpoint called","time":"2025-02-27T21:34:13+07:00"}
{"level":"info","msg":"Categories list retrieved successfully","time":"2025-02-27T21:34:13+07:00"}
{"level":"info","msg":"GetAllCategories endpoint called","time":"2025-02-27T21:34:22+07:00"}
{"level":"info","msg":"Categories list retrieved successfully","time":"2025-02-27T21:34:22+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-27T23:22:06+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-27T23:22:06+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-27T23:22:06+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-27T23:22:06+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-27T23:22:06+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-27T23:22:06+07:00"}
{"level":"info","msg":"GetAllCategories endpoint called","time":"2025-02-27T23:23:50+07:00"}
{"level":"info","msg":"Categories list retrieved successfully","time":"2025-02-27T23:23:50+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-27T23:35:25+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-27T23:35:25+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-27T23:35:25+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-27T23:35:25+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-27T23:35:25+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-27T23:35:25+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-28T22:28:51+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-28T22:28:51+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-28T22:28:51+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-28T22:28:51+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-28T22:28:51+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-28T22:28:51+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-28T22:30:52+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-28T22:30:52+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-28T22:30:52+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-28T22:30:52+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-28T22:30:52+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-28T22:30:52+07:00"}
{"level":"info","msg":"GetAllProducts endpoint called","time":"2025-02-28T22:32:47+07:00"}
{"level":"info","msg":"Product list retrieved successfully","time":"2025-02-28T22:32:47+07:00"}
{"level":"info","msg":"GetAllSuppliers endpoint called","time":"2025-02-28T22:33:11+07:00"}
{"level":"info","msg":"suppliers list retrieved successfully","time":"2025-02-28T22:33:11+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-28T22:39:14+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-28T22:39:14+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-28T22:39:14+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-28T22:39:14+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-28T22:39:14+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-28T22:39:14+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-28T22:39:46+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-28T22:39:46+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-28T22:39:46+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-28T22:39:46+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-28T22:39:46+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-28T22:39:46+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-28T22:40:33+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-28T22:40:33+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-28T22:40:33+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-28T22:40:33+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-28T22:40:33+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-28T22:40:33+07:00"}
{"level":"info","msg":"CreateSupplier endpoint called","time":"2025-02-28T22:42:42+07:00"}
{"level":"error","msg":"Failed to create Supplier: unsupported data type: gorm.io/gorm/schema.Namer: Table not set, please set it like: db.Model(\u0026user) or db.Table(\"users\")","time":"2025-02-28T22:42:42+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-28T22:43:26+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-28T22:43:26+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-28T22:43:26+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-28T22:43:26+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-28T22:43:26+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-28T22:43:26+07:00"}
{"level":"info","msg":"CreateSupplier endpoint called","time":"2025-02-28T22:43:33+07:00"}
{"level":"info","msg":"Supplier created successfully","time":"2025-02-28T22:43:33+07:00"}
{"level":"info","msg":"GetAllSuppliers endpoint called","time":"2025-02-28T22:43:43+07:00"}
{"level":"info","msg":"suppliers list retrieved successfully","time":"2025-02-28T22:43:43+07:00"}
{"level":"info","msg":"GetAllSuppliers endpoint called","time":"2025-02-28T22:44:51+07:00"}
{"level":"info","msg":"suppliers list retrieved successfully","time":"2025-02-28T22:44:51+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-02-28T22:47:47+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-02-28T22:47:47+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-02-28T22:47:47+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-02-28T22:47:47+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-02-28T22:47:47+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-02-28T22:47:47+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-03-01T00:46:22+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-03-01T00:46:22+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-03-01T00:46:22+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-03-01T00:46:22+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-03-01T00:46:22+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-03-01T00:46:22+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-03-01T23:16:32+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-03-01T23:16:32+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-03-01T23:16:32+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-03-01T23:16:32+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-03-01T23:16:32+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-03-01T23:16:32+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-03-01T23:18:04+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-03-01T23:18:04+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-03-01T23:18:04+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-03-01T23:18:04+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-03-01T23:18:04+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-03-01T23:18:04+07:00"}
{"level":"info","msg":"GetAllProducts endpoint called","time":"2025-03-01T23:19:22+07:00"}
{"level":"info","msg":"Product warehouses list retrieved successfully","time":"2025-03-01T23:19:22+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-03-01T23:20:58+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-03-01T23:20:58+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-03-01T23:20:58+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-03-01T23:20:58+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-03-01T23:20:58+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-03-01T23:20:58+07:00"}
{"level":"info","msg":"GetProductWarehouse endpoint called","time":"2025-03-01T23:21:24+07:00"}
{"level":"info","msg":"Get a product warehouse successfully","time":"2025-03-01T23:21:24+07:00"}
{"level":"info","msg":"CreateWarehouse endpoint called","time":"2025-03-01T23:22:14+07:00"}
{"level":"info","msg":"Warehouses created successfully","time":"2025-03-01T23:22:14+07:00"}
{"level":"info","msg":"UpdateProductWarehouse endpoint called","time":"2025-03-01T23:22:56+07:00"}
{"level":"warning","msg":"Invalid product warehouse parameters: parsing time \"string\" as \"2006-01-02T15:04:05Z07:00\": cannot parse \"string\" as \"2006\"","time":"2025-03-01T23:22:56+07:00"}
{"level":"info","msg":"UpdateProductWarehouse endpoint called","time":"2025-03-01T23:23:11+07:00"}
{"level":"warning","msg":"Invalid product warehouse parameters: parsing time \" \" as \"2006-01-02T15:04:05Z07:00\": cannot parse \" \" as \"2006\"","time":"2025-03-01T23:23:11+07:00"}
{"level":"info","msg":"UpdateProductWarehouse endpoint called","time":"2025-03-01T23:23:33+07:00"}
{"level":"error","msg":"Failed to update product: Error 1054 (42S22): Unknown column 'warehouse' in 'where clause'","time":"2025-03-01T23:23:33+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-03-01T23:24:17+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-03-01T23:24:17+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-03-01T23:24:17+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-03-01T23:24:17+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-03-01T23:24:17+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-03-01T23:24:17+07:00"}
{"level":"info","msg":"UpdateProductWarehouse endpoint called","time":"2025-03-01T23:24:21+07:00"}
{"level":"info","msg":"Product warehouse updated successfully","time":"2025-03-01T23:24:21+07:00"}
{"level":"info","msg":"GetAllProducts endpoint called","time":"2025-03-01T23:24:41+07:00"}
{"level":"info","msg":"Product warehouses list retrieved successfully","time":"2025-03-01T23:24:41+07:00"}
{"level":"info","msg":"CreateProduct endpoint called","time":"2025-03-01T23:25:41+07:00"}
{"level":"error","msg":"Failed to create product warehouse: Error 1452 (23000): Cannot add or update a child row: a foreign key constraint fails (`products_service`.`product_warehouse`, CONSTRAINT `product_warehouse_ibfk_1` FOREIGN KEY (`product_id`) REFERENCES `products` (`product_id`) ON DELETE CASCADE)","time":"2025-03-01T23:25:41+07:00"}
{"level":"info","msg":"GetAllWarehouses endpoint called","time":"2025-03-01T23:27:16+07:00"}
{"level":"info","msg":"Warehouses list retrieved successfully","time":"2025-03-01T23:27:16+07:00"}
{"level":"info","msg":"CreateProduct endpoint called","time":"2025-03-01T23:28:14+07:00"}
{"level":"info","msg":"Product warehouse created successfully","time":"2025-03-01T23:28:14+07:00"}
{"level":"info","msg":"GetAllProducts endpoint called","time":"2025-03-01T23:28:30+07:00"}
{"level":"info","msg":"Product warehouses list retrieved successfully","time":"2025-03-01T23:28:30+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-03-01T23:29:50+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-03-01T23:29:50+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-03-01T23:29:50+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-03-01T23:29:50+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-03-01T23:29:50+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-03-01T23:29:50+07:00"}
{"level":"info","msg":"DeleteProduct endpoint called","time":"2025-03-01T23:29:56+07:00"}
{"level":"warning","msg":"Product warehouse not found: record not found","time":"2025-03-01T23:29:56+07:00"}
{"level":"info","msg":"DeleteProduct endpoint called","time":"2025-03-01T23:30:26+07:00"}
{"level":"warning","msg":"Product warehouse not found: record not found","time":"2025-03-01T23:30:26+07:00"}
{"level":"info","msg":"DeleteProduct endpoint called","time":"2025-03-01T23:30:34+07:00"}
{"level":"warning","msg":"Product warehouse not found: record not found","time":"2025-03-01T23:30:34+07:00"}
{"level":"info","msg":"DeleteProduct endpoint called","time":"2025-03-01T23:31:09+07:00"}
{"level":"error","msg":"Failed to delete product warehouse: WHERE conditions required","time":"2025-03-01T23:31:09+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-03-01T23:34:31+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-03-01T23:34:31+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-03-01T23:34:31+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-03-01T23:34:31+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-03-01T23:34:31+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-03-01T23:34:31+07:00"}
{"level":"info","msg":"DeleteProduct endpoint called","time":"2025-03-01T23:34:44+07:00"}
{"level":"error","msg":"Failed to delete product warehouse: unsupported data type: product_warehouse: Table not set, please set it like: db.Model(\u0026user) or db.Table(\"users\")","time":"2025-03-01T23:34:44+07:00"}
{"level":"info","msg":"GetAllProducts endpoint called","time":"2025-03-01T23:34:54+07:00"}
{"level":"info","msg":"Product warehouses list retrieved successfully","time":"2025-03-01T23:34:54+07:00"}
{"level":"info","msg":"DeleteProduct endpoint called","time":"2025-03-01T23:35:09+07:00"}
{"level":"error","msg":"Failed to delete product warehouse: unsupported data type: product_warehouse: Table not set, please set it like: db.Model(\u0026user) or db.Table(\"users\")","time":"2025-03-01T23:35:09+07:00"}
{"level":"info","msg":"DeleteProduct endpoint called","time":"2025-03-01T23:36:02+07:00"}
{"level":"error","msg":"Failed to delete product warehouse: unsupported data type: product_warehouse: Table not set, please set it like: db.Model(\u0026user) or db.Table(\"users\")","time":"2025-03-01T23:36:02+07:00"}
{"level":"info","msg":"DeleteProduct endpoint called","time":"2025-03-01T23:36:03+07:00"}
{"level":"error","msg":"Failed to delete product warehouse: unsupported data type: product_warehouse: Table not set, please set it like: db.Model(\u0026user) or db.Table(\"users\")","time":"2025-03-01T23:36:03+07:00"}
{"level":"info","msg":"GetProductWarehouse endpoint called","time":"2025-03-01T23:36:45+07:00"}
{"level":"info","msg":"Get a product warehouse successfully","time":"2025-03-01T23:36:45+07:00"}
{"level":"info","msg":"Connecting to database...","time":"2025-03-01T23:37:45+07:00"}
{"level":"info","msg":"Connect database successfully","time":"2025-03-01T23:37:45+07:00"}
{"level":"info","msg":"Setting up logging...","time":"2025-03-01T23:37:45+07:00"}
{"level":"info","msg":"Server initialization complete","time":"2025-03-01T23:37:45+07:00"}
{"level":"info","msg":"Creating repositories and services...","time":"2025-03-01T23:37:45+07:00"}
{"level":"info","msg":"Setting up API routes...","time":"2025-03-01T23:37:45+07:00"}
{"level":"info","msg":"DeleteProduct endpoint called","time":"2025-03-01T23:37:55+07:00"}
{"level":"error","msg":"Failed to delete product warehouse: unsupported data type: product_warehouse: Table not set, please set it like: db.Model(\u0026user) or db.Table(\"users\")","time":"2025-03-01T23:37:55+07:00"}
